{"ast":null,"code":"import _regeneratorRuntime from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/block.three/src/components/layout/Landing.js\";\nimport React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Landing).call(this, props));\n    _this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {},\n      rpcConnection: ''\n    };\n    _this.getLatestBlocks = _this.getLatestBlocks.bind(_assertThisInitialized(_this));\n    _this.stopReceivingBlock = _this.stopReceivingBlock.bind(_assertThisInitialized(_this));\n    _this.getBlocks = _this.getBlocks.bind(_assertThisInitialized(_this));\n    _this.intervalOBJ = null;\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.state.rpcConnection = new JsonRpc(endpoint);\n    }\n  }, {\n    key: \"stopReceivingBlock\",\n    value: function stopReceivingBlock() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"getBlocks\",\n    value: function getBlocks() {\n      var _this2 = this;\n\n      var rpc = this.state.rpcConnection;\n      rpc.get_info().then(function (data) {\n        if (data.head_block_num) {\n          if (!_this2.state.block[data.head_block_num]) {\n            _this2.state.block[data.head_block_num] = data.head_block_num;\n            rpc.get_block(data.head_block_num).then(function (block_data) {\n              if (block_data) {\n                _this2.setState({\n                  blockContainer: [].concat(_toConsumableArray(_this2.state.blockContainer), [block_data])\n                });\n              }\n\n              _this2.state.currLimit++;\n            });\n          }\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          errors: err\n        });\n      });\n\n      if (this.state.currLimit === this.state.maxLimit) {\n        console.log('AA');\n        clearInterval(this.intervalOBJ);\n      }\n    }\n  }, {\n    key: \"getLatestBlocks\",\n    value: function getLatestBlocks() {\n      this.intervalOBJ = setInterval(this.getBlocks, 500);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.getLatestBlocks());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blockContainer = this.state.blockContainer;\n      var blockHeadContainer;\n      var spinnerContainer;\n\n      if (blockContainer.length === 10) {\n        blockHeadContainer = blockContainer.map(function (block) {\n          return React.createElement(BlockInfo, {\n            key: block.block_num,\n            id: block.id,\n            timestamp: block.timestamp,\n            transactions: block.transactions.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n        });\n      } else {\n        spinnerContainer = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Latest Blocks\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), spinnerContainer), React.createElement(\"div\", {\n        className: \"col-sm-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"BlockID\")), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Timestamp\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Transactions\")), blockHeadContainer));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/src/components/layout/Landing.js"],"names":["React","Component","JsonRpc","endpoint","BlockInfo","Spinner","setInterval","Landing","props","state","maxLimit","currLimit","blockContainer","errors","block","rpcConnection","getLatestBlocks","bind","stopReceivingBlock","getBlocks","intervalOBJ","clearInterval","intervalID","rpc","get_info","then","data","head_block_num","get_block","block_data","setState","catch","err","console","log","blockHeadContainer","spinnerContainer","length","map","block_num","id","timestamp","transactions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nclass Landing extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        maxLimit:10,\n        currLimit:0,\n        blockContainer:[],\n        errors:'',\n        block:{},\n        rpcConnection:''\n    }\n    this.getLatestBlocks = this.getLatestBlocks.bind(this);\n    this.stopReceivingBlock = this.stopReceivingBlock.bind(this);\n    this.getBlocks = this.getBlocks.bind(this);\n    this.intervalOBJ = null;\n}\n\ncomponentWillMount(){\n  this.state.rpcConnection = new JsonRpc(endpoint);\n}\n\nstopReceivingBlock(){\n  clearInterval(this.intervalID);\n}\n\n\ngetBlocks(){\n  let rpc = this.state.rpcConnection;\n    rpc.get_info().then(data=>{\n      if(data.head_block_num){\n        if(!this.state.block[data.head_block_num]){\n          this.state.block[data.head_block_num] = data.head_block_num;\n          rpc.get_block(data.head_block_num).then(block_data=>{\n            if(block_data){\n              this.setState({blockContainer:[...this.state.blockContainer,block_data]})\n            }\n            this.state.currLimit++;\n          })\n        }\n        }}).catch(err => {\n            this.setState({errors: err})\n        });\n\n        if(this.state.currLimit === this.state.maxLimit){\n          console.log('AA');\n          clearInterval(this.intervalOBJ);\n        }\n}\n\n\ngetLatestBlocks(){\n    this.intervalOBJ = setInterval(this.getBlocks,500)\n}\n\nasync componentDidMount(){\n   await this.getLatestBlocks();\n}\n\n  render() {\n\n    const { blockContainer } = this.state;\n\n    let blockHeadContainer;\n\n    let spinnerContainer;\n\n    if(blockContainer.length===10){\n        blockHeadContainer = blockContainer.map(block => (\n          <BlockInfo key={block.block_num} id={block.id} timestamp={block.timestamp} transactions={block.transactions.length} />\n        ))\n    }else{\n      spinnerContainer = <Spinner />\n    }\n\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>Latest Blocks</h3>\n                <hr/>\n                {spinnerContainer}\n              </div>\n                  \n                  <div className=\"col-sm-7\"><p className=\"lead font-weight-bold\">BlockID</p></div>\n                  <div className=\"col-sm-3\"><p className=\"lead font-weight-bold\">Timestamp</p></div>\n                  <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Transactions</p></div>\n                  {blockHeadContainer}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}