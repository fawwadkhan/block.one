{"ast":null,"code":"import _regeneratorRuntime from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/block.three/src/components/layout/Landing.js\";\nimport React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Landing).call(this, props));\n    _this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {}\n    };\n    _this.getLatestBlocks = _this.getLatestBlocks.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"getLatestBlocks\",\n    value: function getLatestBlocks() {\n      var _this2 = this;\n\n      var rpc = new JsonRpc(endpoint);\n      setInterval(function () {\n        if (_this2.state.currLimit === _this2.state.maxLimit) {\n          return;\n        }\n\n        rpc.get_info().then(function (data) {\n          if (data.head_block_num) {\n            console.log(data.head_block_num);\n            rpc.get_block(data.head_block_num).then(function (block_data) {\n              if (block_data) {\n                _this2.setState({\n                  blockContainer: [].concat(_toConsumableArray(_this2.state.blockContainer), [block_data])\n                });\n              }\n            });\n            _this2.state.currLimit++;\n          }\n        }).catch(function (err) {\n          _this2.setState({\n            errors: err\n          });\n        });\n      }, 500); //},1000)\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.getLatestBlocks());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blockContainer = this.state.blockContainer;\n      var blockHeadContainer;\n\n      if (blockContainer) {\n        blockHeadContainer = blockContainer.map(function (block) {\n          return React.createElement(BlockInfo, {\n            key: block.block_num,\n            id: block.id,\n            timestamp: block.timestamp,\n            transactions: block.transactions.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          });\n        });\n      } else {\n        console.log('aaaa');\n        blockHeadContainer = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Latest Blocks\")), React.createElement(\"div\", {\n        className: \"col-sm-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"BlockID\")), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Timestamp\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Transactions\")), blockHeadContainer));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/src/components/layout/Landing.js"],"names":["React","Component","JsonRpc","endpoint","BlockInfo","Spinner","setInterval","Landing","props","state","maxLimit","currLimit","blockContainer","errors","block","getLatestBlocks","bind","rpc","get_info","then","data","head_block_num","console","log","get_block","block_data","setState","catch","err","blockHeadContainer","map","block_num","id","timestamp","transactions","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nclass Landing extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        maxLimit:10,\n        currLimit:0,\n        blockContainer:[],\n        errors:'',\n        block:{}\n    }\n    this.getLatestBlocks = this.getLatestBlocks.bind(this);\n}\n\n  getLatestBlocks(){\n    const rpc = new JsonRpc(endpoint);\n      \n            setInterval(() => {\n              if(this.state.currLimit === this.state.maxLimit){\n                return;\n              }\n              rpc.get_info().then(data=>{\n                if(data.head_block_num){\n                  console.log(data.head_block_num);\n                  rpc.get_block(data.head_block_num).then(block_data=>{\n                    if(block_data){\n                      this.setState({blockContainer:[...this.state.blockContainer,block_data]})\n                    }\n                  }) \n                  this.state.currLimit++;\n                }\n              }).catch(err => {\n                  this.setState({errors: err})\n              });\n            },500)\n        \n      //},1000)\n}\n\nasync componentDidMount(){\n   await this.getLatestBlocks();\n}\n\n  render() {\n\n    const { blockContainer } = this.state;\n\n    let blockHeadContainer;\n\n    if(blockContainer){\n        blockHeadContainer = blockContainer.map(block => (\n          <BlockInfo key={block.block_num} id={block.id} timestamp={block.timestamp} transactions={block.transactions.length} />\n        ))\n    }else{\n      console.log('aaaa');\n      blockHeadContainer = <Spinner />\n    }\n\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>Latest Blocks</h3>\n              </div>\n                  <div className=\"col-sm-7\"><p className=\"lead font-weight-bold\">BlockID</p></div>\n                  <div className=\"col-sm-3\"><p className=\"lead font-weight-bold\">Timestamp</p></div>\n                  <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Transactions</p></div>\n                  {blockHeadContainer}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}