{"ast":null,"code":"import _toConsumableArray from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/block.three/src/components/layout/Landing.js\";\nimport React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Landing).call(this, props));\n    _this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {},\n      rpcConnection: ''\n    };\n    _this.getLatestBlocks = _this.getLatestBlocks.bind(_assertThisInitialized(_this));\n    _this.getBlocks = _this.getBlocks.bind(_assertThisInitialized(_this));\n    _this.intervalOBJ = null;\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        rpcConnection: new JsonRpc(endpoint)\n      });\n    }\n  }, {\n    key: \"getBlocks\",\n    value: function getBlocks() {\n      var _this2 = this;\n\n      if (this.state.currLimit === this.state.maxLimit) {\n        clearInterval(this.intervalOBJ._id);\n      } else {\n        var rpc = this.state.rpcConnection;\n        rpc.get_info().then(function (data) {\n          if (data.head_block_num) {\n            if (!_this2.state.block[data.head_block_num]) {\n              _this2.setState(function () {\n                return {\n                  block: _objectSpread({}, _this2.state.block, _defineProperty({}, data.head_block_num, data.head_block_num))\n                };\n              });\n\n              rpc.get_block(data.head_block_num).then(function (block_data) {\n                if (block_data) {\n                  _this2.setState({\n                    blockContainer: [].concat(_toConsumableArray(_this2.state.blockContainer), [block_data])\n                  });\n                }\n\n                _this2.setState({\n                  currLimit: _this2.state.currLimit + 1\n                });\n              }).catch(function (err) {\n                console.log('Error Response: ', err);\n              });\n            }\n          }\n        }).catch(function (err) {\n          console.log('Error Response: ', err);\n        });\n      }\n    }\n  }, {\n    key: \"refreshPage\",\n    value: function refreshPage() {\n      window.location.reload(false);\n    }\n  }, {\n    key: \"getLatestBlocks\",\n    value: function getLatestBlocks() {\n      this.intervalOBJ = setInterval(this.getBlocks, 1000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLatestBlocks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blockContainer = this.state.blockContainer;\n      var blockHeadContainer;\n      var submitButtonContainer;\n\n      if (blockContainer.length === 10) {\n        blockHeadContainer = blockContainer.map(function (block) {\n          return React.createElement(BlockInfo, {\n            key: block.block_num,\n            information: block,\n            onClick: \"callMe\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          });\n        });\n        submitButtonContainer = React.createElement(\"div\", {\n          style: {\n            margin: '0 auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Load latest blocks\",\n          onClick: this.refreshPage,\n          className: \"btn btn-info btn-block mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n      } else {\n        blockHeadContainer = React.createElement(Spinner, {\n          count: this.state.currLimit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Latest Blocks\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"BlockID\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Timestamp\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Transactions\")), blockHeadContainer, submitButtonContainer));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/src/components/layout/Landing.js"],"names":["React","Component","JsonRpc","endpoint","BlockInfo","Spinner","setInterval","Landing","props","state","maxLimit","currLimit","blockContainer","errors","block","rpcConnection","getLatestBlocks","bind","getBlocks","intervalOBJ","setState","clearInterval","_id","rpc","get_info","then","data","head_block_num","get_block","block_data","catch","err","console","log","window","location","reload","blockHeadContainer","submitButtonContainer","length","map","block_num","margin","refreshPage"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,QAA5B;;IAEMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETC,MAAAA,SAAS,EAAC,CAFD;AAGTC,MAAAA,cAAc,EAAC,EAHN;AAITC,MAAAA,MAAM,EAAC,EAJE;AAKTC,MAAAA,KAAK,EAAC,EALG;AAMTC,MAAAA,aAAa,EAAC;AANL,KAAb;AAQA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AACA,UAAKE,WAAL,GAAmB,IAAnB;AAZgB;AAanB;;;;yCAEmB;AAClB,WAAKC,QAAL,CAAc;AAACL,QAAAA,aAAa,EAAE,IAAIb,OAAJ,CAAYC,QAAZ;AAAhB,OAAd;AACD;;;gCAGU;AAAA;;AACT,UAAG,KAAKM,KAAL,CAAWE,SAAX,KAAyB,KAAKF,KAAL,CAAWC,QAAvC,EAAgD;AAC9CW,QAAAA,aAAa,CAAC,KAAKF,WAAL,CAAiBG,GAAlB,CAAb;AACD,OAFD,MAEK;AACH,YAAIC,GAAG,GAAG,KAAKd,KAAL,CAAWM,aAArB;AACAQ,QAAAA,GAAG,CAACC,QAAJ,GAAeC,IAAf,CAAoB,UAAAC,IAAI,EAAE;AACxB,cAAGA,IAAI,CAACC,cAAR,EAAuB;AACrB,gBAAG,CAAC,MAAI,CAAClB,KAAL,CAAWK,KAAX,CAAiBY,IAAI,CAACC,cAAtB,CAAJ,EAA0C;AACxC,cAAA,MAAI,CAACP,QAAL,CAAc;AAAA,uBAAO;AACnBN,kBAAAA,KAAK,oBACA,MAAI,CAACL,KAAL,CAAWK,KADX,sBAEFY,IAAI,CAACC,cAFH,EAEoBD,IAAI,CAACC,cAFzB;AADc,iBAAP;AAAA,eAAd;;AAMAJ,cAAAA,GAAG,CAACK,SAAJ,CAAcF,IAAI,CAACC,cAAnB,EAAmCF,IAAnC,CAAwC,UAAAI,UAAU,EAAE;AAClD,oBAAGA,UAAH,EAAc;AACZ,kBAAA,MAAI,CAACT,QAAL,CAAc;AAACR,oBAAAA,cAAc,+BAAK,MAAI,CAACH,KAAL,CAAWG,cAAhB,IAA+BiB,UAA/B;AAAf,mBAAd;AACD;;AACD,gBAAA,MAAI,CAACT,QAAL,CAAc;AACZT,kBAAAA,SAAS,EAAE,MAAI,CAACF,KAAL,CAAWE,SAAX,GAAqB;AADpB,iBAAd;AAGD,eAPD,EAOGmB,KAPH,CAOS,UAAAC,GAAG,EAAG;AACbC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,GAA/B;AACD,eATD;AAUD;AACA;AAAC,SApBN,EAoBQD,KApBR,CAoBc,UAAAC,GAAG,EAAI;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,GAA/B;AACD,SAtBL;AAuBD;AAEF;;;kCAEY;AACXG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;;sCAGgB;AACb,WAAKjB,WAAL,GAAmBb,WAAW,CAAC,KAAKY,SAAN,EAAgB,IAAhB,CAA9B;AACH;;;wCAEkB;AACjB,WAAKF,eAAL;AACD;;;6BAEU;AAAA,UAECJ,cAFD,GAEoB,KAAKH,KAFzB,CAECG,cAFD;AAIP,UAAIyB,kBAAJ;AAEA,UAAIC,qBAAJ;;AAEA,UAAG1B,cAAc,CAAC2B,MAAf,KAAwB,EAA3B,EAA8B;AAC1BF,QAAAA,kBAAkB,GAAGzB,cAAc,CAAC4B,GAAf,CAAmB,UAAA1B,KAAK;AAAA,iBAC3C,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEA,KAAK,CAAC2B,SAAtB;AAAiC,YAAA,WAAW,EAAE3B,KAA9C;AAAqD,YAAA,OAAO,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD2C;AAAA,SAAxB,CAArB;AAGAwB,QAAAA,qBAAqB,GACjB;AAAK,UAAA,KAAK,EAAE;AAACI,YAAAA,MAAM,EAAC;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,oBAA3B;AAAgD,UAAA,OAAO,EAAE,KAAKC,WAA9D;AAA2E,UAAA,SAAS,EAAC,6BAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OATD,MASK;AACHN,QAAAA,kBAAkB,GAAG,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWE,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA1B,CALJ,EAMI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA1B,CANJ,EAOI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA1B,CAPJ,EAQK0B,kBARL,EASKC,qBATL,CADJ,CADF;AAeD;;;;EAvGmBrC,S;;AA0GtB,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nclass Landing extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        maxLimit:10,\n        currLimit:0,\n        blockContainer:[],\n        errors:'',\n        block:{},\n        rpcConnection:''\n    }\n    this.getLatestBlocks = this.getLatestBlocks.bind(this);\n    this.getBlocks = this.getBlocks.bind(this);\n    this.intervalOBJ = null;\n}\n\ncomponentWillMount(){\n  this.setState({rpcConnection: new JsonRpc(endpoint)});\n}\n\n\ngetBlocks(){\n  if(this.state.currLimit === this.state.maxLimit){\n    clearInterval(this.intervalOBJ._id);\n  }else{\n    let rpc = this.state.rpcConnection;\n    rpc.get_info().then(data=>{\n      if(data.head_block_num){\n        if(!this.state.block[data.head_block_num]){\n          this.setState(() => ({\n            block: {\n              ...this.state.block,\n              [data.head_block_num]: data.head_block_num,\n            }\n          }));\n          rpc.get_block(data.head_block_num).then(block_data=>{\n            if(block_data){\n              this.setState({blockContainer:[...this.state.blockContainer,block_data]})\n            }\n            this.setState({\n              currLimit: this.state.currLimit+1\n            })\n          }).catch(err =>{\n            console.log('Error Response: ',err);\n          })\n        }\n        }}).catch(err => {\n          console.log('Error Response: ',err);\n        });\n  }\n        \n}\n\nrefreshPage(){\n  window.location.reload(false);\n}\n\n\ngetLatestBlocks(){\n    this.intervalOBJ = setInterval(this.getBlocks,1000)\n}\n\ncomponentDidMount(){\n  this.getLatestBlocks();\n}\n\n  render() {\n\n    const { blockContainer } = this.state;\n\n    let blockHeadContainer;\n\n    let submitButtonContainer;\n\n    if(blockContainer.length===10){\n        blockHeadContainer = blockContainer.map(block => (\n          <BlockInfo key={block.block_num} information={block} onClick=\"callMe\" />\n        ))\n        submitButtonContainer = (\n            <div style={{margin:'0 auto'}}>\n                <input type=\"submit\" value=\"Load latest blocks\" onClick={this.refreshPage} className=\"btn btn-info btn-block mt-4\"/>\n            </div>\n        )\n    }else{\n      blockHeadContainer = <Spinner count={this.state.currLimit} />\n    }\n    \n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>Latest Blocks</h3>\n                <hr/>\n              </div>\n              <div className=\"col-sm-8\"><p className=\"lead font-weight-bold\">BlockID</p></div>\n              <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Timestamp</p></div>\n              <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Transactions</p></div>\n              {blockHeadContainer}\n              {submitButtonContainer}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}