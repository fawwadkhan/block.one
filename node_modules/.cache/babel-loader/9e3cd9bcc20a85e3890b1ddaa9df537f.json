{"ast":null,"code":"\"use strict\";\n/**\n  Convert a synchronous function into a asynchronous one (via setTimeout)\n  wrapping it in a promise.  This does not expect the function to have a\n  callback paramter.\n\n  @arg {function} func - non-callback function\n\n  @example promiseAsync(myfunction)\n*/\n\nmodule.exports = function (func) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          resolve(func.apply(undefined, args));\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/node_modules/eosjs-ecc/lib/promise-async.js"],"names":["module","exports","func","_len","arguments","length","args","Array","_key","Promise","resolve","reject","setTimeout","apply","undefined","err"],"mappings":"AAAA;AAEA;;;;;;;;;;AASAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,SAAO,YAAY;AACjB,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CC,MAAAA,UAAU,CAAC,YAAY;AACrB,YAAI;AACFF,UAAAA,OAAO,CAACR,IAAI,CAACW,KAAL,CAAWC,SAAX,EAAsBR,IAAtB,CAAD,CAAP;AACD,SAFD,CAEE,OAAOS,GAAP,EAAY;AACZJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD;AACF,OANS,CAAV;AAOD,KARM,CAAP;AASD,GAdD;AAeD,CAhBD","sourcesContent":["\"use strict\";\n\n/**\n  Convert a synchronous function into a asynchronous one (via setTimeout)\n  wrapping it in a promise.  This does not expect the function to have a\n  callback paramter.\n\n  @arg {function} func - non-callback function\n\n  @example promiseAsync(myfunction)\n*/\nmodule.exports = function (func) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          resolve(func.apply(undefined, args));\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  };\n};"]},"metadata":{},"sourceType":"script"}