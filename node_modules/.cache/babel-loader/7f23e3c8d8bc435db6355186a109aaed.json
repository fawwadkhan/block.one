{"ast":null,"code":"import _classCallCheck from \"/Users/madcad/Documents/main_application/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/main_application/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/main_application/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/main_application/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/madcad/Documents/main_application/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/main_application/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { getCurrentProfile } from '../../actions/profileActions';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../commons/Spinner';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = this.props.auth.user;\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var dashboardContent;\n\n      if (profile === null || loading) {\n        dashboardContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      } else {\n        if (Object.keys(profile).length > 0) {\n          dashboardContent = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, \"Display Profile\");\n        } else {\n          dashboardContent = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"lead text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"Welcome \", user.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"You have not setup a profile, please add some info.\"), React.createElement(Link, {\n            to: \"/create-profile\",\n            className: \"btn btn-lg btn-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"Create Profile\"));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/madcad/Documents/main_application/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","getCurrentProfile","Link","PropTypes","connect","Spinner","Dashboard","props","user","auth","profile","loading","dashboardContent","Object","keys","length","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;IAEMC,S;;;;;;;;;;;;;wCAEe;AACjB,WAAKC,KAAL,CAAWN,iBAAX;AACD;;;6BAEQ;AAAA,UAECO,IAFD,GAEU,KAAKD,KAAL,CAAWE,IAFrB,CAECD,IAFD;AAAA,gCAIsB,KAAKD,KAAL,CAAWG,OAJjC;AAAA,UAICA,OAJD,uBAICA,OAJD;AAAA,UAIUC,OAJV,uBAIUA,OAJV;AAMP,UAAIC,gBAAJ;;AAEA,UAAGF,OAAO,KAAK,IAAZ,IAAoBC,OAAvB,EAA+B;AAC7BC,QAAAA,gBAAgB,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;AACD,OAFD,MAEK;AACH,YAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,GAA4B,CAA/B,EAAiC;AAC/BH,UAAAA,gBAAgB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAnB;AACD,SAFD,MAEK;AACHA,UAAAA,gBAAgB,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwCJ,IAAI,CAACQ,IAA7C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,EAGI,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAC,iBAAT;AAA2B,YAAA,SAAS,EAAC,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CADF;AAOD;AACF;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADF;AAWD;;;;EAzCqBhB,S;;AA4CxBM,SAAS,CAACW,SAAV,GAAqB;AACnBhB,EAAAA,iBAAiB,EAAEE,SAAS,CAACe,IAAV,CAAeC,UADf;AAEnBV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBD,UAFJ;AAGnBT,EAAAA,OAAO,EAAEP,SAAS,CAACiB,MAAV,CAAiBD;AAHP,CAArB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCb,IAAAA,IAAI,EAAEa,KAAK,CAACb,IADsB;AAElCC,IAAAA,OAAO,EAAEY,KAAK,CAACZ;AAFmB,GAAZ;AAAA,CAAxB;;AAKA,eAAeN,OAAO,CAACiB,eAAD,EAAkB;AAAEpB,EAAAA,iBAAiB,EAAjBA;AAAF,CAAlB,CAAP,CAAgDK,SAAhD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { getCurrentProfile } from '../../actions/profileActions';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../commons/Spinner';\n\nclass Dashboard extends Component {\n\n  componentDidMount(){\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n\n    const { user } = this.props.auth;\n\n    const { profile, loading } = this.props.profile;\n\n    let dashboardContent;\n\n    if(profile === null || loading){\n      dashboardContent = <Spinner />\n    }else{\n      if(Object.keys(profile).length>0){\n        dashboardContent = <h4>Display Profile</h4>\n      }else{\n        dashboardContent = (\n          <div>\n              <p className=\"lead text-muted\">Welcome {user.name}</p>\n              <p>You have not setup a profile, please add some info.</p>\n              <Link to='/create-profile' className=\"btn btn-lg btn-info\">Create Profile</Link>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"dashboard\">\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-md-12\">\n                      \n                  </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nDashboard.propTypes= {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}