{"ast":null,"code":"import _regeneratorRuntime from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/block.three/src/components/layout/Landing.js\";\nimport React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Landing).call(this, props));\n    _this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {},\n      rpcConnection: ''\n    };\n    _this.getLatestBlocks = _this.getLatestBlocks.bind(_assertThisInitialized(_this));\n    _this.getBlocks = _this.getBlocks.bind(_assertThisInitialized(_this));\n    _this.loadLatestBlock = _this.loadLatestBlock.bind(_assertThisInitialized(_this));\n    _this.intervalOBJ = null;\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        rpcConnection: new JsonRpc(endpoint)\n      });\n    }\n  }, {\n    key: \"loadLatestBlock\",\n    value: function loadLatestBlock() {\n      this.setState({\n        currLimit: 0,\n        blockContainer: [],\n        block: {}\n      });\n      this.getLatestBlocks();\n    }\n  }, {\n    key: \"getBlocks\",\n    value: function getBlocks() {\n      var _this2 = this;\n\n      if (this.state.currLimit === this.state.maxLimit) {\n        clearInterval(this.intervalOBJ._id);\n      } else {\n        var rpc = this.state.rpcConnection;\n\n        (function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(rpc.get_info().then(function (data) {\n                    if (data.head_block_num) {\n                      if (!_this2.state.block[data.head_block_num]) {\n                        _this2.setState(function () {\n                          return {\n                            block: _objectSpread({}, _this2.state.block, _defineProperty({}, data.head_block_num, data.head_block_num))\n                          };\n                        });\n\n                        rpc.get_block(data.head_block_num).then(function (block_data) {\n                          if (block_data) {\n                            _this2.setState({\n                              blockContainer: [].concat(_toConsumableArray(_this2.state.blockContainer), [block_data])\n                            });\n                          }\n\n                          _this2.setState({\n                            currLimit: _this2.state.currLimit + 1\n                          });\n                        }).catch(function (err) {\n                          throw new Error(err);\n                        });\n                      }\n                    }\n                  }).catch(function (err) {\n                    throw new Error(err);\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          });\n        })();\n      }\n    }\n  }, {\n    key: \"getLatestBlocks\",\n    value: function getLatestBlocks() {\n      this.intervalOBJ = setInterval(this.getBlocks, 1000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLatestBlocks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blockContainer = this.state.blockContainer;\n      var blockHeadContainer;\n      var submitButtonContainer;\n\n      if (blockContainer.length === 10) {\n        blockHeadContainer = blockContainer.map(function (block) {\n          return React.createElement(BlockInfo, {\n            key: block.block_num,\n            information: block,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          });\n        });\n        submitButtonContainer = React.createElement(\"div\", {\n          style: {\n            margin: '0 auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Load latest blocks\",\n          onClick: this.loadLatestBlock,\n          className: \"btn btn-info btn-block mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      } else {\n        blockHeadContainer = React.createElement(Spinner, {\n          count: this.state.currLimit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Latest Blocks\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"BlockID\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Timestamp\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Transactions\")), blockHeadContainer, submitButtonContainer));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/src/components/layout/Landing.js"],"names":["React","Component","JsonRpc","endpoint","BlockInfo","Spinner","setInterval","Landing","props","state","maxLimit","currLimit","blockContainer","errors","block","rpcConnection","getLatestBlocks","bind","getBlocks","loadLatestBlock","intervalOBJ","setState","clearInterval","_id","rpc","get_info","then","data","head_block_num","get_block","block_data","catch","err","Error","blockHeadContainer","submitButtonContainer","length","map","block_num","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nclass Landing extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        maxLimit:10,\n        currLimit:0,\n        blockContainer:[],\n        errors:'',\n        block:{},\n        rpcConnection:''\n    }\n    this.getLatestBlocks = this.getLatestBlocks.bind(this);\n    this.getBlocks = this.getBlocks.bind(this);\n    this.loadLatestBlock = this.loadLatestBlock.bind(this);\n    this.intervalOBJ = null;\n}\n\ncomponentWillMount(){\n  this.setState({rpcConnection: new JsonRpc(endpoint)});\n}\n\nloadLatestBlock(){\n    this.setState({\n      currLimit: 0,\n      blockContainer:[],\n      block: {}\n    });\n\n    this.getLatestBlocks();\n}\n\ngetBlocks(){\n  if(this.state.currLimit === this.state.maxLimit){\n    clearInterval(this.intervalOBJ._id);\n  }else{\n    let rpc = this.state.rpcConnection;\n    (async () => { \n      await rpc.get_info().then(data=>{\n        if(data.head_block_num){\n          if(!this.state.block[data.head_block_num]){\n            this.setState(() => ({\n              block: {\n                ...this.state.block,\n                [data.head_block_num]: data.head_block_num,\n              }\n            }));\n            rpc.get_block(data.head_block_num).then(block_data=>{\n              if(block_data){\n                this.setState({blockContainer:[...this.state.blockContainer,block_data]})\n              }\n              this.setState({\n                currLimit: this.state.currLimit+1\n              })\n            }).catch(err =>{\n              throw new Error(err)\n            })\n          }\n          }}).catch(err => {\n            throw new Error(err)\n          });\n    })();\n  }\n        \n}\n\ngetLatestBlocks(){\n    this.intervalOBJ = setInterval(this.getBlocks,1000)\n}\n\ncomponentDidMount(){\n  this.getLatestBlocks();\n}\n\n  render() {\n\n    const { blockContainer } = this.state;\n\n    let blockHeadContainer;\n\n    let submitButtonContainer;\n\n    if(blockContainer.length===10){\n        blockHeadContainer = blockContainer.map(block => (\n          <BlockInfo key={block.block_num} information={block} />\n        ))\n        submitButtonContainer = (\n            <div style={{margin:'0 auto'}}>\n                <input type=\"submit\" value=\"Load latest blocks\" onClick={this.loadLatestBlock} className=\"btn btn-info btn-block mt-4\"/>\n            </div>\n        )\n    }else{\n      blockHeadContainer = <Spinner count={this.state.currLimit} />\n    }\n    \n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>Latest Blocks</h3>\n                <hr/>\n              </div>\n              <div className=\"col-sm-8\"><p className=\"lead font-weight-bold\">BlockID</p></div>\n              <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Timestamp</p></div>\n              <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Transactions</p></div>\n              {blockHeadContainer}\n              {submitButtonContainer}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}