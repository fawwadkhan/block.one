{"ast":null,"code":"var _jsxFileName = \"/Users/madcad/Documents/main_application/client/src/components/commons/TextFieldGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar TextFieldGroup = function TextFieldGroup(_ref) {\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      info = _ref.info,\n      error = _ref.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: type,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: onChange,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, error));\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n  info: PropTypes.string,\n  error: PropTypes.string\n};\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextFieldGroup;","map":{"version":3,"sources":["/Users/madcad/Documents/main_application/client/src/components/commons/TextFieldGroup.js"],"names":["React","classnames","PropTypes","TextFieldGroup","name","placeholder","value","type","onChange","disabled","info","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OASjB;AAAA,MARFC,IAQE,QARFA,IAQE;AAAA,MAPFC,WAOE,QAPFA,WAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,IAKE,QALFA,IAKE;AAAA,MAJFC,QAIE,QAJFA,QAIE;AAAA,MAHFC,QAGE,QAHFA,QAGE;AAAA,MAFFC,IAEE,QAFFA,IAEE;AAAA,MADFC,KACE,QADFA,KACE;AACJ,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAEJ,IAAb;AACI,IAAA,SAAS,EAAEN,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcU;AADoC,KAAjC,CADzB;AAII,IAAA,WAAW,EAAEN,WAJjB;AAKI,IAAA,IAAI,EAAED,IALV;AAMI,IAAA,KAAK,EAAEE,KANX;AAMkB,IAAA,QAAQ,EAAEE,QAN5B;AAOI,IAAA,QAAQ,EAAEC,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUKC,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAVb,EAWKC,KAAK,IAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAXf,CADF;AAeD,CAzBD;;AA4BAR,cAAc,CAACS,SAAf,GAA2B;AACvBR,EAAAA,IAAI,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UADA;AAEvBT,EAAAA,WAAW,EAAEH,SAAS,CAACW,MAFA;AAGvBP,EAAAA,KAAK,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAHD;AAIvBP,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAJA;AAKvBN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAAV,CAAeD,UALF;AAMvBL,EAAAA,QAAQ,EAAEP,SAAS,CAACW,MANG;AAOvBH,EAAAA,IAAI,EAAER,SAAS,CAACW,MAPO;AAQvBF,EAAAA,KAAK,EAAET,SAAS,CAACW;AARM,CAA3B;AAWAV,cAAc,CAACa,YAAf,GAA8B;AAC1BT,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAKA,eAAeJ,cAAf","sourcesContent":["import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    type,\n    onChange,\n    disabled,\n    info,\n    error\n}) => {\n  return (\n    <div className=\"form-group\">\n        <input type={type} \n            className={classnames('form-control form-control-lg', {\n                'is-invalid': error\n            })} \n            placeholder={placeholder}\n            name={name} \n            value={value} onChange={onChange} \n            disabled={disabled}\n        />\n        {info && <small className=\"form-text text-muted\">{info}</small>}\n        {error && (<div className=\"invalid-feedback\">{error}</div>)}\n    </div>\n  )\n}\n\n\nTextFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.string,\n    info: PropTypes.string,\n    error: PropTypes.string\n}\n\nTextFieldGroup.defaultProps = {\n    type: 'text'\n}\n\n\nexport default TextFieldGroup;\n"]},"metadata":{},"sourceType":"module"}