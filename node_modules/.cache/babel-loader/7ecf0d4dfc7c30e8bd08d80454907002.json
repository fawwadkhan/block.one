{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('/api/users/register', userData).then(function (res) {\n      return history.push('./login');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      var token = res.data.token; //Set Auth Token to Local storage\n\n      localStorage.setItem('jwtToken', token); //Set Token to Header\n\n      setAuthToken(token); //Decode token to get user data\n\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/madcad/Documents/main_application/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","console","log","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC3DR,IAAAA,KAAK,CAACS,IAAN,CAAW,qBAAX,EAAkCH,QAAlC,EACCI,IADD,CACM,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,SAAb,CAAJ;AAAA,KADT,EAECC,KAFD,CAEO,UAAAC,GAAG,EAAI;AACVN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CAAR;AAIH,KAPD;AAQH,GAT2B;AAAA,CAArB;AAYP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAE7CR,IAAAA,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+BH,QAA/B,EACCI,IADD,CACM,UAAAC,GAAG,EAAI;AAAA,UACDS,KADC,GACST,GAAG,CAACO,IADb,CACDE,KADC,EAET;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHS,CAIT;;AACAnB,MAAAA,YAAY,CAACmB,KAAD,CAAZ,CALS,CAOT;;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B;AAEAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AAEH,KAbD,EAcCV,KAdD,CAcO,UAAAC,GAAG,EAAI;AACVW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACG,QAAJ,CAAaC,IAAzB;AACAV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CAAR;AAIH,KApBD;AAqBH,GAvBgC;AAAA,CAA1B;AAyBP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEX,gBADH;AAEHY,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAnB,QAAQ,EAAG;AAEvCa,IAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AAEA3B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAO,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AAEH,GARyB;AAAA,CAAnB","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/users/register', userData)\n    .then(res => history.push('./login'))\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n\nexport const loginUser = userData => dispatch => {\n\n    axios.post('/api/users/login', userData)\n    .then(res => {\n        const { token } = res.data;\n        //Set Auth Token to Local storage\n        localStorage.setItem('jwtToken', token);\n        //Set Token to Header\n        setAuthToken(token);\n\n        //Decode token to get user data\n        const decoded = jwt_decode(token);\n\n        dispatch(setCurrentUser(decoded));\n\n    })\n    .catch(err => {\n        console.log(err.response.data);\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\nexport const setCurrentUser = (decoded) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = () => dispatch =>{\n    \n    localStorage.removeItem('jwtToken');\n\n    setAuthToken(false);\n\n    dispatch(setCurrentUser({}));\n\n}"]},"metadata":{},"sourceType":"module"}