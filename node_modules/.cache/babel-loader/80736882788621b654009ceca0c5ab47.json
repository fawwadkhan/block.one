{"ast":null,"code":"import _toConsumableArray from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/madcad/Documents/block.three/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madcad/Documents/block.three/src/components/layout/Landing.js\";\nimport React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Landing).call(this, props));\n    _this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {},\n      rpcConnection: ''\n    };\n    _this.getLatestBlocks = _this.getLatestBlocks.bind(_assertThisInitialized(_this));\n    _this.getBlocks = _this.getBlocks.bind(_assertThisInitialized(_this));\n    _this.loadLatestBlock = _this.loadLatestBlock.bind(_assertThisInitialized(_this));\n    _this.intervalOBJ = null;\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        rpcConnection: new JsonRpc(endpoint)\n      });\n    }\n  }, {\n    key: \"loadLatestBlock\",\n    value: function loadLatestBlock() {\n      this.setState({\n        currLimit: 0,\n        blockContainer: [],\n        block: {}\n      });\n      this.getLatestBlocks();\n    }\n  }, {\n    key: \"getBlocks\",\n    value: function getBlocks() {\n      var _this2 = this;\n\n      if (this.state.currLimit === this.state.maxLimit) {\n        clearInterval(this.intervalOBJ._id);\n      } else {\n        var rpc = this.state.rpcConnection;\n        rpc.get_info().then(function (data) {\n          if (data.head_block_num) {\n            if (!_this2.state.block[data.head_block_num]) {\n              _this2.setState(function () {\n                return {\n                  block: _objectSpread({}, _this2.state.block, _defineProperty({}, data.head_block_num, data.head_block_num))\n                };\n              });\n\n              rpc.get_block(data.head_block_num).then(function (block_data) {\n                if (block_data) {\n                  _this2.setState({\n                    blockContainer: [].concat(_toConsumableArray(_this2.state.blockContainer), [block_data])\n                  });\n                }\n\n                _this2.setState({\n                  currLimit: _this2.state.currLimit + 1\n                });\n              }).catch(function (err) {\n                _this2.setState({\n                  errors: 'Failed to fetch block, ' + err\n                });\n              });\n            }\n          }\n        }).catch(function (err) {\n          _this2.setState({\n            errors: 'Failed to fetch info, ' + err\n          });\n        });\n      }\n    }\n  }, {\n    key: \"getLatestBlocks\",\n    value: function getLatestBlocks() {\n      this.intervalOBJ = setInterval(this.getBlocks, 800);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLatestBlocks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blockContainer = this.state.blockContainer;\n      var blockHeadContainer;\n      var submitButtonContainer;\n\n      if (blockContainer.length === 10) {\n        blockHeadContainer = blockContainer.map(function (block) {\n          return React.createElement(BlockInfo, {\n            key: block.block_num,\n            information: block,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        });\n        submitButtonContainer = React.createElement(\"div\", {\n          style: {\n            margin: '0 auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Load latest blocks\",\n          onClick: this.loadLatestBlock,\n          className: \"btn btn-info btn-block mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }));\n      } else {\n        blockHeadContainer = React.createElement(Spinner, {\n          count: this.state.currLimit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Latest Blocks\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"BlockID\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Timestamp\")), React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Transactions\")), blockHeadContainer, submitButtonContainer));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/madcad/Documents/block.three/src/components/layout/Landing.js"],"names":["React","Component","JsonRpc","endpoint","BlockInfo","Spinner","setInterval","Landing","props","state","maxLimit","currLimit","blockContainer","errors","block","rpcConnection","getLatestBlocks","bind","getBlocks","loadLatestBlock","intervalOBJ","setState","clearInterval","_id","rpc","get_info","then","data","head_block_num","get_block","block_data","catch","err","blockHeadContainer","submitButtonContainer","length","map","block_num","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { JsonRpc } from 'eosjs';\nimport endpoint from '../../validation/endpoint';\nimport BlockInfo from '../commons/BlockInfo';\nimport Spinner from '../commons/Spinner';\nimport { setInterval } from 'timers';\n\nclass Landing extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxLimit: 10,\n      currLimit: 0,\n      blockContainer: [],\n      errors: '',\n      block: {},\n      rpcConnection: ''\n    }\n    this.getLatestBlocks = this.getLatestBlocks.bind(this);\n    this.getBlocks = this.getBlocks.bind(this);\n    this.loadLatestBlock = this.loadLatestBlock.bind(this);\n    this.intervalOBJ = null;\n  }\n\n  componentWillMount() {\n    this.setState({ rpcConnection: new JsonRpc(endpoint) });\n  }\n\n  loadLatestBlock() {\n    this.setState({\n      currLimit: 0,\n      blockContainer: [],\n      block: {}\n    });\n\n    this.getLatestBlocks();\n  }\n\n  getBlocks() {\n    if (this.state.currLimit === this.state.maxLimit) {\n      clearInterval(this.intervalOBJ._id);\n    } else {\n      let rpc = this.state.rpcConnection;\n      rpc.get_info().then(data => {\n        if (data.head_block_num) {\n          if (!this.state.block[data.head_block_num]) {\n            this.setState(() => ({\n              block: {\n                ...this.state.block,\n                [data.head_block_num]: data.head_block_num,\n              }\n            }));\n            rpc.get_block(data.head_block_num).then(block_data => {\n              if (block_data) {\n                this.setState({ blockContainer: [...this.state.blockContainer, block_data] })\n              }\n              this.setState({\n                currLimit: this.state.currLimit + 1\n              })\n            }).catch(err => {\n              this.setState({ errors: 'Failed to fetch block, ' + err })\n            })\n          }\n        }\n      }).catch(err => {\n        this.setState({ errors: 'Failed to fetch info, ' + err })\n      });\n    }\n\n  }\n\n  getLatestBlocks() {\n    this.intervalOBJ = setInterval(this.getBlocks, 800)\n  }\n\n  componentDidMount() {\n    this.getLatestBlocks();\n  }\n\n  render() {\n\n    const { blockContainer } = this.state;\n\n    let blockHeadContainer;\n\n    let submitButtonContainer;\n\n    if (blockContainer.length === 10) {\n      blockHeadContainer = blockContainer.map(block => (\n        <BlockInfo key={block.block_num} information={block} />\n      ))\n      submitButtonContainer = (\n        <div style={{ margin: '0 auto' }}>\n          <input type=\"submit\" value=\"Load latest blocks\" onClick={this.loadLatestBlock} className=\"btn btn-info btn-block mt-4\" />\n        </div>\n      )\n    } else {\n      blockHeadContainer = <Spinner count={this.state.currLimit} />\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3>Latest Blocks</h3>\n            <hr />\n          </div>\n          <div className=\"col-sm-8\"><p className=\"lead font-weight-bold\">BlockID</p></div>\n          <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Timestamp</p></div>\n          <div className=\"col-sm-2\"><p className=\"lead font-weight-bold\">Transactions</p></div>\n          {blockHeadContainer}\n          {submitButtonContainer}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}